@page "/invoice/create"
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Buttons
@using AutoDealerSphere.Shared.Models
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager NavigationManager

<SfBreadcrumb>
    <BreadcrumbItems>
        <BreadcrumbItem IconCss="e-icons e-home" Url="/"/>
        <BreadcrumbItem Text="請求書管理" Url="/invoicelist"/>
        <BreadcrumbItem Text="新規作成" Url="./"/>
    </BreadcrumbItems>
</SfBreadcrumb>

<h2>請求書新規作成</h2>

<div class="invoice-create-form">
    @if (_model != null)
    {
        <EditForm Model="@_model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            
            <div class="form-section">
                <h3>請求書基本情報入力</h3>
                
                <div class="form-row">
                    <label>請求書番号</label>
                    <SfTextBox @bind-Value="_model.InvoiceNumber" Readonly="true"></SfTextBox>
                </div>
                
                <div class="form-row">
                    <label class="required">顧客</label>
                    <SfDropDownList TValue="int" TItem="AutoDealerSphere.Shared.Models.Client" 
                        @bind-Value="@_model.ClientId" 
                        DataSource="@_clients"
                        Placeholder="顧客を選択"
                        AllowFiltering="true">
                        <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                        <DropDownListEvents TValue="int" TItem="AutoDealerSphere.Shared.Models.Client" ValueChange="OnClientChanged"></DropDownListEvents>
                    </SfDropDownList>
                    <ValidationMessage For="@(() => _model.ClientId)" />
                </div>
                
                <div class="form-row">
                    <label class="required">車両</label>
                    <SfDropDownList TValue="int" TItem="Vehicle" 
                        @bind-Value="@_model.VehicleId" 
                        DataSource="@_vehicles"
                        Placeholder="車両を選択"
                        Enabled="@(_vehicles != null && _vehicles.Any())">
                        <DropDownListFieldSettings Value="Id" Text="VehicleName"></DropDownListFieldSettings>
                    </SfDropDownList>
                    <ValidationMessage For="@(() => _model.VehicleId)" />
                </div>
                
                <div class="form-row">
                    <label class="required">請求日</label>
                    <SfDatePicker @bind-Value="_model.InvoiceDate" Format="yyyy/MM/dd"></SfDatePicker>
                    <ValidationMessage For="@(() => _model.InvoiceDate)" />
                </div>
                
                <div class="form-row">
                    <label class="required">作業完了日</label>
                    <SfDatePicker @bind-Value="_model.WorkCompletedDate" Format="yyyy/MM/dd"></SfDatePicker>
                    <ValidationMessage For="@(() => _model.WorkCompletedDate)" />
                </div>
                
                <div class="form-row">
                    <label>次回車検日</label>
                    <SfDatePicker @bind-Value="_model.NextInspectionDate" Format="yyyy/MM/dd"></SfDatePicker>
                </div>
                
                <div class="form-row">
                    <label>走行距離</label>
                    <SfNumericTextBox @bind-Value="_model.Mileage" Placeholder="走行距離" Format="N0"></SfNumericTextBox>
                </div>
                
                <div class="form-row">
                    <label>備考</label>
                    <SfTextBox @bind-Value="_model.Notes" Multiline="true" Placeholder="備考"></SfTextBox>
                </div>
            </div>
            
            <div class="form-buttons">
                <SfButton Type="ButtonType.Submit" IsPrimary="true">保存</SfButton>
                <SfButton @onclick="Cancel">キャンセル</SfButton>
            </div>
        </EditForm>
    }
    else
    {
        <p>読み込み中...</p>
    }
</div>

<style>
    .invoice-create-form {
        max-width: 800px;
        margin: 0 auto;
    }
    
    .form-section {
        background: #f5f5f5;
        padding: 20px;
        border-radius: 5px;
        margin-bottom: 20px;
    }
    
    .form-section h3 {
        margin-bottom: 20px;
        color: #333;
    }
    
    .form-row {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
        gap: 10px;
    }
    
    .form-row label {
        width: 150px;
        color: #333;
    }
    
    .form-row .e-input-group,
    .form-row .e-ddl,
    .form-row .e-date-wrapper {
        flex: 1;
    }
    
    .form-buttons {
        display: flex;
        justify-content: center;
        gap: 10px;
        margin-top: 20px;
    }
    
    .required::after {
        content: "必須";
        color: #ffffff;
        background: #cc0000;
        font-size: 0.8em;
        padding: 0.3em;
        border-radius: 0.5em;
        margin-left: 0.3em;
    }
</style>

@code {
    private Invoice? _model;
    private List<AutoDealerSphere.Shared.Models.Client> _clients = new();
    private List<Vehicle> _vehicles = new();

    protected override async Task OnInitializedAsync()
    {
        // 新規請求書モデルを初期化
        _model = new Invoice
        {
            InvoiceDate = DateTime.Today,
            WorkCompletedDate = DateTime.Today,
            TaxRate = 10m,
            InvoiceDetails = new List<InvoiceDetail>()
        };
        
        // 請求書番号を取得
        var response = await Http.GetFromJsonAsync<InvoiceNumberResponse>("api/Invoices/new-number");
        if (response != null)
        {
            _model.InvoiceNumber = response.InvoiceNumber;
        }
        
        // 顧客リストを取得
        var clients = await Http.GetFromJsonAsync<AutoDealerSphere.Shared.Models.Client[]>("api/Client");
        _clients = clients?.ToList() ?? new List<AutoDealerSphere.Shared.Models.Client>();
    }

    private async Task OnClientChanged(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int, AutoDealerSphere.Shared.Models.Client> args)
    {
        if (args.Value > 0)
        {
            await LoadVehicles(args.Value);
            _model!.VehicleId = 0;
        }
    }

    private async Task LoadVehicles(int clientId)
    {
        var vehicles = await Http.GetFromJsonAsync<Vehicle[]>($"api/Vehicles/byClient/{clientId}");
        _vehicles = vehicles?.ToList() ?? new List<Vehicle>();
    }

    private async Task OnValidSubmit()
    {
        if (_model != null)
        {
            // 新規作成
            var response = await Http.PostAsJsonAsync("api/Invoices", _model);
            if (response.IsSuccessStatusCode)
            {
                var created = await response.Content.ReadFromJsonAsync<Invoice>();
                if (created != null)
                {
                    // 保存後は請求書詳細画面へ遷移
                    NavigationManager.NavigateTo($"/invoice/detail/{created.Id}");
                }
            }
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/invoicelist");
    }
    
    private class InvoiceNumberResponse
    {
        public string InvoiceNumber { get; set; } = string.Empty;
    }
}