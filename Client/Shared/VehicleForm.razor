@using Syncfusion.Blazor.DataForm
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Inputs
@using System.ComponentModel.DataAnnotations
@using AutoDealerSphere.Shared.Models
@inject IJSRuntime JSRuntime

<div class="vehicle-form">
    <EditForm Model="@Item" OnValidSubmit="ValidSubmit">
        <DataAnnotationsValidator />
        
        <h4>基本情報</h4>
        <div class="form-section">
            <div class="form-row">
                <label class="required">所有者</label>
                <SfDropDownList TValue="int" TItem="Client" @bind-Value="Item.ClientId" 
                    DataSource="@Clients" Placeholder="所有者を選択">
                    <DropDownListFieldSettings Text="Name" Value="Id"></DropDownListFieldSettings>
                </SfDropDownList>
                <ValidationMessage For="@(() => Item.ClientId)" />
            </div>
            
            <div class="form-row">
                <label>車名</label>
                <SfTextBox @bind-Value="Item.VehicleName" Placeholder="車名"></SfTextBox>
                <ValidationMessage For="@(() => Item.VehicleName)" />
            </div>
            
            <div class="form-row">
                <label>型式</label>
                <SfTextBox @bind-Value="Item.VehicleModel" Placeholder="型式"></SfTextBox>
                <ValidationMessage For="@(() => Item.VehicleModel)" />
            </div>
        </div>

        <h4>ナンバープレート情報</h4>
        <div class="form-section">
            <div class="form-row">
                <label>登録地域</label>
                <SfTextBox @bind-Value="Item.LicensePlateLocation" Placeholder="例: 横浜"></SfTextBox>
                <ValidationMessage For="@(() => Item.LicensePlateLocation)" />
            </div>
            
            <div class="form-row">
                <label>分類番号</label>
                <SfTextBox @bind-Value="Item.LicensePlateClassification" Placeholder="例: 300"></SfTextBox>
                <ValidationMessage For="@(() => Item.LicensePlateClassification)" />
            </div>
            
            <div class="form-row">
                <label>ひらがな</label>
                <SfTextBox @bind-Value="Item.LicensePlateHiragana" Placeholder="例: あ"></SfTextBox>
                <ValidationMessage For="@(() => Item.LicensePlateHiragana)" />
            </div>
            
            <div class="form-row">
                <label>ナンバー</label>
                <SfTextBox @bind-Value="Item.LicensePlateNumber" Placeholder="例: 12-34"></SfTextBox>
                <ValidationMessage For="@(() => Item.LicensePlateNumber)" />
            </div>
        </div>

        <h4>車両詳細</h4>
        <div class="form-section">
            <div class="form-row">
                <label>車種</label>
                <SfDropDownList TValue="int?" TItem="VehicleCategory" @bind-Value="Item.VehicleCategoryId"
                    DataSource="@VehicleCategories" Placeholder="車種を選択">
                    <DropDownListFieldSettings Text="CategoryName" Value="Id"></DropDownListFieldSettings>
                </SfDropDownList>
                <ValidationMessage For="@(() => Item.VehicleCategoryId)" />
            </div>

            <div class="form-row">
                <label>排気量(cc)</label>
                <SfNumericTextBox TValue="decimal?" @bind-Value="DisplacementInCC"
                    Placeholder="排気量" Format="N0"></SfNumericTextBox>
                <ValidationMessage For="@(() => Item.Displacement)" />
            </div>
            
            <div class="form-row">
                <label>初度登録年月</label>
                <SfDatePicker TValue="DateTime?" @bind-Value="Item.FirstRegistrationDate" 
                    Placeholder="初度登録年月を選択" Format="yyyy/MM/dd"></SfDatePicker>
                <ValidationMessage For="@(() => Item.FirstRegistrationDate)" />
            </div>
            
            <div class="form-row">
                <label>走行距離(km)</label>
                <SfNumericTextBox TValue="decimal?" @bind-Value="Item.Mileage" 
                    Placeholder="走行距離" Format="N0"></SfNumericTextBox>
                <ValidationMessage For="@(() => Item.Mileage)" />
            </div>
            
            <div class="form-row">
                <label>車台番号</label>
                <SfTextBox @bind-Value="Item.ChassisNumber" Placeholder="車台番号"></SfTextBox>
                <ValidationMessage For="@(() => Item.ChassisNumber)" />
            </div>
            
            <div class="form-row">
                <label>型式指定番号</label>
                <SfTextBox @bind-Value="Item.TypeCertificationNumber" Placeholder="型式指定番号"></SfTextBox>
                <ValidationMessage For="@(() => Item.TypeCertificationNumber)" />
            </div>
            
            <div class="form-row">
                <label>類別区分番号</label>
                <SfTextBox @bind-Value="Item.CategoryNumber" Placeholder="類別区分番号"></SfTextBox>
                <ValidationMessage For="@(() => Item.CategoryNumber)" />
            </div>
        </div>

        <h4>車検情報</h4>
        <div class="form-section">
            <div class="form-row">
                <label>車検満了日</label>
                <SfDatePicker TValue="DateTime?" @bind-Value="Item.InspectionExpiryDate" 
                    Placeholder="車検満了日を選択" Format="yyyy/MM/dd"></SfDatePicker>
                <ValidationMessage For="@(() => Item.InspectionExpiryDate)" />
            </div>
            
            <div class="form-row">
                <label>車検証番号</label>
                <SfTextBox @bind-Value="Item.InspectionCertificateNumber" Placeholder="車検証番号"></SfTextBox>
                <ValidationMessage For="@(() => Item.InspectionCertificateNumber)" />
            </div>
        </div>

        <h4>その他の情報</h4>
        <div class="form-section">
            <div class="form-row">
                <label>用途</label>
                <SfTextBox @bind-Value="Item.Purpose" Placeholder="用途"></SfTextBox>
                <ValidationMessage For="@(() => Item.Purpose)" />
            </div>
            
            <div class="form-row">
                <label>自家用・事業用</label>
                <SfTextBox @bind-Value="Item.PersonalBusinessUse" Placeholder="自家用・事業用"></SfTextBox>
                <ValidationMessage For="@(() => Item.PersonalBusinessUse)" />
            </div>
            
            <div class="form-row">
                <label>車体の形状</label>
                <SfTextBox @bind-Value="Item.BodyShape" Placeholder="車体の形状"></SfTextBox>
                <ValidationMessage For="@(() => Item.BodyShape)" />
            </div>
            
            <div class="form-row">
                <label>燃料の種類</label>
                <SfTextBox @bind-Value="Item.FuelType" Placeholder="燃料の種類"></SfTextBox>
                <ValidationMessage For="@(() => Item.FuelType)" />
            </div>
        </div>

        <div class="form-buttons">
            <SfButton Type="ButtonType.Submit" CssClass="e-primary">登録</SfButton>
            @if (Item.Id > 0)
            {
                <SfButton OnClick="ClickDelete" CssClass="e-danger">削除</SfButton>
            }
        </div>
    </EditForm>
</div>

@code {
    [Parameter] public Vehicle Item { get; set; } = new();
    [Parameter] public List<Client> Clients { get; set; } = new();
    [Parameter] public List<VehicleCategory> VehicleCategories { get; set; } = new();
    [Parameter] public EventCallback<Vehicle> OnClickOK { get; set; }
    [Parameter] public EventCallback<Vehicle> OnClickDelete { get; set; }

    private decimal? _displacementInCC;

    private decimal? DisplacementInCC
    {
        get
        {
            if (_displacementInCC == null && Item.Displacement != null)
            {
                // データベースのL値をcc表示用に1000倍する
                _displacementInCC = Item.Displacement * 1000;
            }
            return _displacementInCC;
        }
        set
        {
            _displacementInCC = value;
            // 画面入力のcc値をLに変換してモデルに設定
            if (value != null)
            {
                Item.Displacement = value / 1000;
            }
            else
            {
                Item.Displacement = null;
            }
        }
    }

    protected override void OnParametersSet()
    {
        // 編集モード時、既存データがある場合の初期化
        if (Item != null && Item.Displacement != null)
        {
            _displacementInCC = Item.Displacement * 1000;
        }
    }

    private async Task ValidSubmit()
    {
        await OnClickOK.InvokeAsync(Item);
    }

    private async Task ClickDelete()
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "本当に削除しますか？"))
        {
            await OnClickDelete.InvokeAsync(Item);
        }
    }
}