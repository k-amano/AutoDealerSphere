@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using Syncfusion.Blazor.DataForm
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using System.ComponentModel.DataAnnotations

<div class="user-form">
	<EditForm Model="@Item" OnValidSubmit="OnValidated" OnInvalidSubmit="OnUnvalidated">
		<DataAnnotationsValidator />
		<div class="form">
			<div class="form-row">
				<label class="required">名前</label>
				<SfTextBox @bind-Value="Item.Name" Placeholder="名前"></SfTextBox>
				<ValidationMessage For="@(() => Item.Name)" />
			</div>
			<div class="form-row">
				<label class="required">メールアドレス</label>
				<SfTextBox @bind-Value="Item.Email" Placeholder="メールアドレス"></SfTextBox>
				<ValidationMessage For="@(() => Item.Email)" />
			</div>
			<div class="form-row">
				<label class="required">パスワード</label>
				<SfTextBox @bind-Value="Item.Password" Type="InputType.Password" Placeholder="パスワード"></SfTextBox>
				<ValidationMessage For="@(() => Item.Password)" />
			</div>
			<div class="form-row">
				<label class="required">権限</label>
				<SfDropDownList TValue="int" TItem="RoleItem" 
					@bind-Value="@Item.Role" 
					DataSource="@Roles"
					Placeholder="権限を選択">
					<DropDownListFieldSettings Value="Value" Text="Text">
					</DropDownListFieldSettings>
				</SfDropDownList>
				<ValidationMessage For="@(() => Item.Role)" />
			</div>
			<div class="form-buttons">
				<SfButton OnClick="OnRegister" IsPrimary="true">登録</SfButton>
				@if (this.OnClickDelete.HasDelegate)
				{
					<SfButton OnClick="OnOpenDialogue" CssClass="e-danger">削除</SfButton>
				}
				<SfButton OnClick="OnCancel">キャンセル</SfButton>
			</div>
		</div>
	</EditForm>
	<SfDialog Width="250px" ShowCloseIcon="true" IsModal="true" @bind-Visible="@IsVisible">
		<DialogTemplates>
			<Header> 確認 </Header>
			<Content> 削除してもよろしいですか? </Content>
		</DialogTemplates>
		<DialogButtons>
			<DialogButton Content="OK" IsPrimary="true" OnClick="@OnDelete" />
			<DialogButton Content="Cancel" OnClick="@OnCloseDialogue" />
		</DialogButtons>
	</SfDialog>
</div>

@code {
    private class RoleItem
    {
        public int Value { get; set; }
        public string Text { get; set; } = "";
    }

    private List<RoleItem> Roles = new List<RoleItem>
    {
        new RoleItem { Value = 1, Text = "一般ユーザー" },
        new RoleItem { Value = 2, Text = "管理者" }
    };
}